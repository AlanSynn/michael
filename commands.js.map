{"version":3,"file":"commands.js","mappings":"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","sources":["webpack:///./src/commands/commands.js?"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global Office */\n\n// Safety settings for Gemini API\nconst safetySettings = [\n  {\n    category: \"HARM_CATEGORY_HARASSMENT\",\n    threshold: \"BLOCK_NONE\",\n  },\n  {\n    category: \"HARM_CATEGORY_HATE_SPEECH\",\n    threshold: \"BLOCK_NONE\",\n  },\n  {\n    category: \"HARM_CATEGORY_SEXUALLY_EXPLICIT\",\n    threshold: \"BLOCK_NONE\",\n  },\n  {\n    category: \"HARM_CATEGORY_DANGEROUS_CONTENT\",\n    threshold: \"BLOCK_NONE\",\n  },\n];\n\n// Fixed model for this command\nconst MODEL_NAME = \"gemini-2.0-flash-lite\";\n\nOffice.onReady(() => {\n  // Office is ready\n});\n\n/**\n * Handles the Add-in Command button click.\n * Translates the entire email body to Korean and replaces the current selection (or inserts at cursor).\n * @param {Office.AddinCommands.Event} event The event object.\n */\nasync function action(event) {\n  let apiKey = \"AIzaSyCQ8Bj8wvFtNV9eml2Qxgz5ZHIPYDLI2qw\";\n\n  // 1. Get API Key from Roaming Settings\n  try {\n    if (Office.context.roamingSettings) {\n      apiKey = Office.context.roamingSettings.get(\"apiKey\");\n    } else {\n      throw new Error(\"RoamingSettings not available.\");\n    }\n  } catch (error) {\n    console.error(\"Error accessing RoamingSettings:\", error);\n    showErrorNotification(`Error accessing settings: ${error.message}`, event);\n    return;\n  }\n\n  if (!apiKey) {\n    showErrorNotification(\"Please set up your Gemini API key in the ReadMeDarling taskpane settings first.\", event);\n    return;\n  }\n\n  // 2. Show Processing Notification\n  showProcessingNotification(\"Translating email body to Korean...\", event);\n\n  try {\n    // 3. Get Email Content\n    const emailContent = await getEmailContent();\n    const subject = Office.context.mailbox.item.subject; // Subject might be useful context\n\n    // 4. Prepare the Prompt for Full Translation\n    const prompt = `Translate the following email content entirely into Korean. Preserve the original meaning and tone as much as possible.\n\nEmail Subject (for context): ${subject}\nEmail Content:\n---\n${emailContent}\n---\n\nProvide only the translated Korean text. Do not add any introductory or concluding remarks.`;\n\n    // 5. Generate Content using Gemini API\n    const translatedBody = await generateContent(prompt, apiKey, MODEL_NAME);\n\n    // 6. Replace the current selection (or insert at cursor) with the translation\n    await replaceSelectionWithText(translatedBody, event);\n\n    // 7. Show Success Notification\n    showSuccessNotification(\"Email body translated to Korean and replaced selection/inserted at cursor.\", event);\n\n  } catch (error) {\n    console.error(\"Error during translation command:\", error);\n    showErrorNotification(`Translation failed: ${error.message}`, event);\n    // Ensure event.completed is called even after error notification\n    event.completed();\n  }\n}\n\n// --- Helper Functions ---\n\n/**\n * Replaces the currently selected text in the email body with the provided text,\n * or inserts at the cursor if nothing is selected.\n * @param {string} textToInsert The text to insert/replace.\n * @param {Office.AddinCommands.Event} event The event object for completion.\n */\nasync function replaceSelectionWithText(textToInsert, event) {\n  return new Promise((resolve, reject) => {\n    Office.context.mailbox.item.body.setSelectedDataAsync(\n      textToInsert,\n      { coercionType: Office.CoercionType.Text, asyncContext: { event: event } },\n      (asyncResult) => {\n        if (asyncResult.status === Office.AsyncResultStatus.Failed) {\n          console.error(\"Failed to set selected data:\", asyncResult.error);\n          reject(new Error(`Failed to insert/replace text: ${asyncResult.error.message}`));\n        } else {\n          console.log(\"Selected data replaced/inserted successfully.\");\n          resolve();\n        }\n      }\n    );\n  });\n}\n\n/**\n * Gets the email body content as plain text.\n * @returns {Promise<string>}\n */\nasync function getEmailContent() {\n  return new Promise((resolve, reject) => {\n    // IMPORTANT: Get the body as TEXT for translation, regardless of the original format.\n    Office.context.mailbox.item.body.getAsync(\n      Office.CoercionType.Text,\n      (result) => {\n        if (result.status === Office.AsyncResultStatus.Succeeded) {\n          resolve(result.value.trim()); // Trim whitespace\n        } else {\n          console.error(\"Failed to get email body as text:\", result.error);\n          reject(new Error(\"Failed to get email content\"));\n        }\n      }\n    );\n  });\n}\n\n/**\n * Generates content using the Gemini API.\n * @param {string} prompt The prompt for the API.\n * @param {string} apiKey The API key.\n * @param {string} modelName The Gemini model name.\n * @returns {Promise<string>} The generated text content.\n */\nasync function generateContent(prompt, apiKey, modelName) {\n  const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/${modelName}:generateContent?key=${apiKey}`;\n\n  try {\n    const response = await fetch(apiUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        contents: [\n          {\n            parts: [\n              {\n                text: prompt,\n              },\n            ],\n          },\n        ],\n        safetySettings: safetySettings,\n        generationConfig: {\n          temperature: 0.3,\n          maxOutputTokens: 8192,\n        },\n      }),\n    });\n\n    const data = await response.json();\n\n    if (!response.ok || data.error) {\n      throw new Error(data.error?.message || `API Error (${response.status})`);\n    }\n\n    if (data.candidates && data.candidates[0] && data.candidates[0].content && data.candidates[0].content.parts[0]) {\n      return data.candidates[0].content.parts[0].text.trim();\n    } else if (data.candidates && data.candidates[0]?.finishReason === 'SAFETY') {\n      throw new Error(\"Content generation blocked due to safety settings.\");\n    } else if (data.promptFeedback?.blockReason) {\n        throw new Error(`Prompt blocked due to safety settings: ${data.promptFeedback.blockReason}`);\n    } else {\n      console.warn(\"Unexpected API response structure:\", data);\n      throw new Error(\"No content generated or unexpected format.\");\n    }\n  } catch (error) {\n    console.error(\"Error generating content via command:\", error);\n    throw error; // Re-throw for handling in the action function\n  }\n}\n\n// --- Notification Helpers ---\n\nfunction showProcessingNotification(message, event) {\n  Office.context.mailbox.item.notificationMessages.replaceAsync(\n    \"ProcessingNotification\",\n    {\n      type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n      message: message,\n      icon: \"Icon.80x80\", // Make sure this icon is defined in your manifest resources\n      persistent: false,\n    },\n    (asyncResult) => {\n      if (asyncResult.status === Office.AsyncResultStatus.Failed) {\n        console.error(\"Failed to show processing notification: \", asyncResult.error);\n      }\n    }\n  );\n}\n\nfunction showSuccessNotification(message, event) {\n  Office.context.mailbox.item.notificationMessages.replaceAsync(\n    \"ActionCompleteNotification\",\n    {\n      type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n      message: message,\n      icon: \"Icon.80x80\",\n      persistent: true, // Keep success message visible\n    },\n    (asyncResult) => {\n      handleNotificationResult(asyncResult, event, \"success\");\n    }\n  );\n}\n\nfunction showErrorNotification(message, event) {\n  Office.context.mailbox.item.notificationMessages.replaceAsync(\n    \"ActionErrorNotification\",\n    {\n      type: Office.MailboxEnums.ItemNotificationMessageType.ErrorMessage,\n      message: message,\n      icon: \"Icon.80x80\",\n      persistent: true,\n    },\n    (asyncResult) => {\n      handleNotificationResult(asyncResult, event, \"error\");\n    }\n  );\n}\n\n// Common handler for notification results; crucial for calling event.completed\nfunction handleNotificationResult(asyncResult, event, type) {\n  if (asyncResult.status === Office.AsyncResultStatus.Failed) {\n    console.error(`Failed to show ${type} notification: `, asyncResult.error);\n  }\n  // Ensure event.completed() is called AFTER the notification attempt, regardless of success/failure\n  // except when the error handler already called it.\n  if (type !== 'error') { // Avoid double completion if error handler already called it\n      event.completed();\n  }\n}\n\n// Register the function with Office.\nOffice.actions.associate(\"action\", action);"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","safetySettings","category","threshold","_action","_callee","event","apiKey","emailContent","subject","prompt","translatedBody","_context","Office","context","roamingSettings","get","t0","console","error","showErrorNotification","concat","message","mailbox","item","notificationMessages","replaceAsync","MailboxEnums","ItemNotificationMessageType","InformationalMessage","icon","persistent","asyncResult","status","AsyncResultStatus","Failed","getEmailContent","generateContent","replaceSelectionWithText","showSuccessNotification","t1","completed","_x2","_x3","_replaceSelectionWithText","_callee2","textToInsert","_context2","reject","body","setSelectedDataAsync","coercionType","CoercionType","Text","asyncContext","log","_getEmailContent","_callee3","_context3","getAsync","result","Succeeded","trim","_x4","_x5","_x6","_generateContent","_callee4","modelName","apiUrl","_data$candidates$","_data$promptFeedback","response","data","_data$error","_context4","fetch","headers","JSON","stringify","contents","parts","text","generationConfig","temperature","maxOutputTokens","json","ok","candidates","content","finishReason","promptFeedback","blockReason","warn","handleNotificationResult","ErrorMessage","onReady","actions","associate","_x"],"sourceRoot":""}